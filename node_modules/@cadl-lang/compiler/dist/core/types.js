/**
 * AST types
 */
export var SyntaxKind;
(function (SyntaxKind) {
    SyntaxKind[SyntaxKind["CadlScript"] = 0] = "CadlScript";
    SyntaxKind[SyntaxKind["ImportStatement"] = 1] = "ImportStatement";
    SyntaxKind[SyntaxKind["Identifier"] = 2] = "Identifier";
    SyntaxKind[SyntaxKind["NamedImport"] = 3] = "NamedImport";
    SyntaxKind[SyntaxKind["DecoratorExpression"] = 4] = "DecoratorExpression";
    SyntaxKind[SyntaxKind["DirectiveExpression"] = 5] = "DirectiveExpression";
    SyntaxKind[SyntaxKind["MemberExpression"] = 6] = "MemberExpression";
    SyntaxKind[SyntaxKind["NamespaceStatement"] = 7] = "NamespaceStatement";
    SyntaxKind[SyntaxKind["UsingStatement"] = 8] = "UsingStatement";
    SyntaxKind[SyntaxKind["OperationStatement"] = 9] = "OperationStatement";
    SyntaxKind[SyntaxKind["ModelStatement"] = 10] = "ModelStatement";
    SyntaxKind[SyntaxKind["ModelExpression"] = 11] = "ModelExpression";
    SyntaxKind[SyntaxKind["ModelProperty"] = 12] = "ModelProperty";
    SyntaxKind[SyntaxKind["ModelSpreadProperty"] = 13] = "ModelSpreadProperty";
    SyntaxKind[SyntaxKind["InterfaceStatement"] = 14] = "InterfaceStatement";
    SyntaxKind[SyntaxKind["UnionStatement"] = 15] = "UnionStatement";
    SyntaxKind[SyntaxKind["UnionVariant"] = 16] = "UnionVariant";
    SyntaxKind[SyntaxKind["EnumStatement"] = 17] = "EnumStatement";
    SyntaxKind[SyntaxKind["EnumMember"] = 18] = "EnumMember";
    SyntaxKind[SyntaxKind["AliasStatement"] = 19] = "AliasStatement";
    SyntaxKind[SyntaxKind["UnionExpression"] = 20] = "UnionExpression";
    SyntaxKind[SyntaxKind["IntersectionExpression"] = 21] = "IntersectionExpression";
    SyntaxKind[SyntaxKind["TupleExpression"] = 22] = "TupleExpression";
    SyntaxKind[SyntaxKind["ArrayExpression"] = 23] = "ArrayExpression";
    SyntaxKind[SyntaxKind["StringLiteral"] = 24] = "StringLiteral";
    SyntaxKind[SyntaxKind["NumericLiteral"] = 25] = "NumericLiteral";
    SyntaxKind[SyntaxKind["BooleanLiteral"] = 26] = "BooleanLiteral";
    SyntaxKind[SyntaxKind["TypeReference"] = 27] = "TypeReference";
    SyntaxKind[SyntaxKind["TemplateParameterDeclaration"] = 28] = "TemplateParameterDeclaration";
    SyntaxKind[SyntaxKind["EmptyStatement"] = 29] = "EmptyStatement";
    SyntaxKind[SyntaxKind["InvalidStatement"] = 30] = "InvalidStatement";
    SyntaxKind[SyntaxKind["LineComment"] = 31] = "LineComment";
    SyntaxKind[SyntaxKind["BlockComment"] = 32] = "BlockComment";
})(SyntaxKind || (SyntaxKind = {}));
export const NoTarget = Symbol("NoTarget");
//# sourceMappingURL=types.js.map