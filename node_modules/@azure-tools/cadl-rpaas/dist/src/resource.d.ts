import { ModelType, Program, Type } from "@cadl-lang/compiler";
export interface ParameterInfo {
    name: string;
    typeName: string;
    resourceType?: Type;
    description?: string;
}
declare type ResourceKind = "Tracked" | "Proxy" | "Extension" | "Plain";
export interface ArmResourcePath {
    path: string;
    parameters: ParameterInfo[];
}
export interface ArmResourceInfo {
    armNamespace: string;
    parentNamespace: string;
    resourceModelName: string;
    resourceListModelName: string;
    resourceKind: ResourceKind;
    collectionName: string;
    standardOperations: string[];
    propertiesType?: ModelType;
    resourceNameParam?: ParameterInfo;
    parentResourceType?: Type;
    resourcePath?: ArmResourcePath;
    operationNamespaces: Set<string>;
}
export declare function getArmResources(program: Program): Type[];
export declare function getArmResourceInfo(program: Program, resourceType: Type): ArmResourceInfo | undefined;
export declare function $armResource(program: Program, resourceType: Type, resourceDetails: Type): void;
export {};
//# sourceMappingURL=resource.d.ts.map